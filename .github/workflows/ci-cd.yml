name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  release:
    types: [created]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r Myapp/requirements.txt

      - name: Run tests
        run: pytest Myapp/ --maxfail=1 --disable-warnings -q

  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Staging (Port 5000)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update
            sudo apt install -y screen python3-venv python3-pip git

            cd ~/CI-CD_Pipelines-For-Flask_App || exit 1
            git fetch --all
            git checkout staging
            git pull origin staging

            # Create or reuse persistent venv
            if [ ! -d "$HOME/flask_venv" ]; then
              python3 -m venv $HOME/flask_venv --upgrade-deps
            fi
            source $HOME/flask_venv/bin/activate

            pip install --upgrade pip
            pip install -r Myapp/requirements.txt

            # Cleanup old Flask screen session and logs
            if screen -list | grep -q "flask_staging"; then
              screen -S flask_staging -X quit
            fi
            rm -f ~/flask-staging.log

            # Start new Flask session in background
            screen -dmS flask_staging bash -c "source $HOME/flask_venv/bin/activate && PORT=5000 ENV=dev python Myapp/app.py"

  deploy-production:
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production (Port 8000)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update
            sudo apt install -y screen python3-venv python3-pip git

            cd ~/CI-CD_Pipelines-For-Flask_App || exit 1
            git fetch --all
            git checkout main
            git pull origin main

            if [ ! -d "$HOME/flask_venv" ]; then
              python3 -m venv $HOME/flask_venv --upgrade-deps
            fi
            source $HOME/flask_venv/bin/activate

            pip install --upgrade pip
            pip install -r Myapp/requirements.txt

            # Cleanup old Flask screen session and logs
            if screen -list | grep -q "flask_production"; then
              screen -S flask_production -X quit
            fi
            rm -f ~/flask-production.log

            # Start new Flask session in background
            screen -dmS flask_production bash -c "source $HOME/flask_venv/bin/activate && PORT=8000 ENV=production python Myapp/app.py"
